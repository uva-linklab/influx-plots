from flask import Flask, jsonify, request, send_file
from influxdb import InfluxDBClient
import utility as util
import matplotlib.pyplot as plt
from datetime import datetime
from io import BytesIO
from decouple import config

# Initialize Flask app
app = Flask(__name__)

# Initialize InfluxDB client
class Influx:
    def __init__(self):
        self.user = config('INFLUXDB_USERNAME')
        self.password = config('INFLUXDB_PASSWORD')
        self.host = config('INFLUX_HOST')
        self.dbname = 'gateway-generic'
        self.port = 443
        self.ssl = True
        self.client = self.get_client()

    def get_client(self, dbname='gateway-generic'):
        client = InfluxDBClient(host=self.host, port=self.port, username=self.user,
                                password=self.password, database=self.dbname, ssl=self.ssl)
        self.client = client
        return client

    def get_result_set(self, fieldname, add_param):  
        q_str = 'SELECT * FROM "%s" WHERE %s' % (fieldname, add_param)
        client = self.client
        result_set = client.query(q_str)
        return result_set

    def get_device_query_adds(self, device_id_list):
        q_append = ''
        count = 0
        for device_id in device_id_list:
            if count == 0:
                q_append += 'and ("device_id"=\'%s\'' % device_id
            else:
                q_append += 'or "device_id"=\'%s\'' % device_id
            count += 1
        q_append += ')'
        return q_append

    # Get data from the past 1 hour
    def get_time_query_from_one_hr(self):
        tq = "time > now() - 1h "
        return tq
    
# Initialize Influx instance
inf = Influx()

# Flask route to get recent data and return it as an image
@app.route('/get_recent_data_image', methods=['GET'])
def get_recent_data_image():
    try:
        # Get device_id and fieldname from query parameters
        device_id = request.args.get('device_id', default='your_default_device_id')
        fieldname = request.args.get('fieldname', default='co2_ppm')  # Default field name is co2_ppm
        
        # Query InfluxDB for data from the past 1 hour
        time_query = inf.get_time_query_from_one_hr()
        device_query = inf.get_device_query_adds([device_id])

        # Combine time and device queries
        full_query = time_query + device_query
        result_set = inf.get_result_set(fieldname, full_query)
        
        # Convert result set to a DataFrame
        df = util.get_longform_df(result_set)
        
        # If no data is found
        if df is None or df.empty:
            return jsonify({"error": "No data found for the device."}), 404

        # Generate the plot using matplotlib
        plt.figure(figsize=(10, 6))
        plt.plot(df['time'], df['value'], label=fieldname, color='blue')

        # Add labels and title
        plt.xlabel('Time')
        plt.ylabel('Value')
        plt.title(f'{fieldname} data for device {device_id}')
        plt.legend()

        # Save plot to a BytesIO object
        img = BytesIO()
        plt.savefig(img, format='png')
        plt.close()
        img.seek(0)

        # Return the image as a response
        return send_file(img, mimetype='image/png')
    
    except Exception as e:
        return jsonify({"error": str(e)}), 500

# Run Flask app
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5012)
